shiny::runApp('Shiny_moscow_cafe')
runApp('Shiny_moscow_cafe')
runApp('Shiny_moscow_cafe')
filtered <- reactive({data = cafe_msk})
map <- NA
map <- leaflet() %>% addTiles()
map <- addMarkers(map,
lng = filtered$data$Longitude_WGS84,
lat = filtered$data$Latitude_WGS84,
clusterOptions = markerClusterOptions(),
popup = paste(paste("<b>",filtered$data$Name, "</b>", sep=""),
filtered$data$TypeObject,
filtered$data$Address,
filtered$data$PublicPhone,
sep = "<br>"),
label = filtered$data$Name)
filtered$data
class(filtered$data)
runApp('Shiny_moscow_cafe')
runApp('Shiny_moscow_cafe')
runApp('Shiny_moscow_cafe')
runApp('Shiny_moscow_cafe')
runApp('Shiny_moscow_cafe')
?absolutePanel
?conditionalPanel
knitr::opts_chunk$set(echo = TRUE)
cafe_msk <- read_excel("cafe.xlsx", sheet = "Sheet0") %>% mutate(Longitude_WGS84 = as.numeric(Longitude_WGS84), Latitude_WGS84 = as.numeric(Latitude_WGS84)) #%>% head(100)
colnames(cafe_msk)
summary(cafe_msk$TypeObject)
summary(as.factor(cafe_msk$TypeObject))
cafe_msk <- read_excel("cafe.xlsx", sheet = "Sheet0") %>% mutate(Longitude_WGS84 = as.numeric(Longitude_WGS84), Latitude_WGS84 = as.numeric(Latitude_WGS84), TypeObject = as.factor(TypeObject))
object_types <- cafe_msk$TypeObject
class(cafe_msk$TypeObject)
getwd()
setwd("C:/Users/Andrey/Documents/GitHub/shiny_moscow_cafe/Shiny_moscow_cafe")
cafe_msk <- read_excel("cafe.xlsx", sheet = "Sheet0") %>% mutate(Longitude_WGS84 = as.numeric(Longitude_WGS84), Latitude_WGS84 = as.numeric(Latitude_WGS84), TypeObject = as.factor(TypeObject))
object_types <- cafe_msk$TypeObject
class(object_types)
runApp()
c("Все типы", object_types)
runApp()
runApp()
object_types <- distinct(cafe_msk$TypeObject)
distinct(as.vector(cafe_msk$TypeObject))
unique(cafe_msk$TypeObject)
object_types <- unique(cafe_msk$TypeObject)
runApp()
object_types[1]
object_types[2]
object_types$name
object_types <- levels(unique(cafe_msk$TypeObject))
object_types
runApp()
runApp()
runApp()
input$select_type
runApp()
runApp()
runApp()
input$select_type
unique(filtered$data$TypeObject)
filtered$data$TypeObject == input$select_type
filtered$data %>% filter(TypeObject == input$select_type)
filtered$data <- filtered$data %>% filter(TypeObject == input$select_type)
filtered$data <- filtered$data %>% filter(TypeObject == input$select_type)
shiny::runApp('Shiny_moscow_cafe')
runApp('Shiny_moscow_cafe')
runApp('Shiny_moscow_cafe')
filtered$data
filtered$data
runApp('Shiny_moscow_cafe')
runApp('Shiny_moscow_cafe')
runApp('Shiny_moscow_cafe')
knitr::opts_chunk$set(echo = TRUE)
foodIcons <- iconList(
restaurant = makeIcon("utensils.png", "utensils@2x.png", 18, 18)
)
foodIcons
View(foodIcons)
runApp('Shiny_moscow_cafe')
library(ggplot2)
colnames(cafe_msk)
ggplot(data = cafe_msk, mapping = aes(x = District, y = ObjectType)) + geom_bar(stat = "identity")
ggplot(data = cafe_msk, mapping = aes(x = District, y = TypeObject)) + geom_bar(stat = "identity")
ggplot(data = cafe_msk, mapping = aes(x = AdmArea, y = TypeObject)) + geom_bar(stat = "identity")
ggplot(data = cafe_msk, mapping = aes(y = AdmArea, x = TypeObject)) + geom_bar(stat = "identity")
ggplot(data = cafe_msk, mapping = aes(x = AdmArea, y = TypeObject)) + geom_bar(stat = "identity")
ggplot(data = cafe_msk, mapping = aes(x = AdmArea, fill = TypeObject)) + geom_bar(stat = "identity")
ggplot(data = cafe_msk, mapping = aes(x = AdmArea, y = SeatsCount, fill = TypeObject)) + geom_bar(stat = "identity")
View(cafe_msk)
runApp('Shiny_moscow_cafe')
cafe_msk <- read_excel("cafe.xlsx", sheet = "Sheet0") %>% mutate(Longitude_WGS84 = as.numeric(Longitude_WGS84), Latitude_WGS84 = as.numeric(Latitude_WGS84), TypeObject = as.factor(TypeObject), SeatsCount = as.numeric(SeatsCount)) #%>% head(100)
runApp('Shiny_moscow_cafe')
sl <- c(10, 100)
sl[1]
sl[2]
runApp('Shiny_moscow_cafe')
runApp('Shiny_moscow_cafe')
runApp('Shiny_moscow_cafe')
cafe_msk %>% filter((SeatsCount >= input$slider_seats[1] && SeatsCount <= input$slider_seats[2]))
input$slider_seats[1]
input$slider_seats[2]
cafe_msk$SeatsCount
summary(cafe_msk$SeatsCount)
filter(cafe_msk, (SeatsCount >= input$slider_seats[1] && SeatsCount <= input$slider_seats[2]))
filter(cafe_msk, SeatsCount >= input$slider_seats[1] && SeatsCount <= input$slider_seats[2])
filter(cafe_msk, SeatsCount >= input$slider_seats[1], SeatsCount <= input$slider_seats[2])
runApp('Shiny_moscow_cafe')
runApp('Shiny_moscow_cafe')
?selectInput
runApp('Shiny_moscow_cafe')
?selectInput
?sliderInput
install.packages("shinyWidgets")
library(shinyWidgets)
?sendSweetAlert
runApp('Shiny_moscow_cafe')
install.packages('rsconnect')
library(rsconnect)
rsconnect::setAccountInfo(name='andmkv',
token='EFD7902944D23DB5461DCFD61C9CDDF4',
secret='pZM/sx87YGcjBrnCHxPeOf+aK6uBnvPkOpJcJmUz')
rsconnect::deployApp()
getwd()
rsconnect::deployApp('Shiny_moscow_cafe')
View(cafe_msk)
shiny::runApp('Shiny_moscow_cafe')
install_packages("tidyverse")
